version: '3.9'
services:

  angular:
    container_name: "angular"
    image: "emmanuelu17/frontend-angular:latest"
    ports:
      - 4200:80
    volumes:
      - ./frontend-angular:/project
      - /project/node_modules
    networks:
      - angular-spring
    links:
      - backend

  # API
  backend:
    container_name: api
    image: "emmanuelu17/spring-backend:latest"
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: $ACTIVE_PROFILE
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/$DATABASE_NAME
      SPRING_DATASOURCE_USERNAME: $DATABASE_USER
      SPRING_DATASOURCE_PASSWORD: $DATABASE_PASSWORD
    networks:
      - spring-mysql
      - angular-spring

  # MySQL server
  db:
    image: "mysql:latest"
    container_name: db
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: $DATABASE_PASSWORD
      MYSQL_DATABASE: $DATABASE_NAME
      MYSQL_USER: $DATABASE_USER
      MYSQL_PASSWORD: $DATABASE_PASSWORD
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "--silent" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - spring-mysql

volumes:
  db-data: {}

networks:
  angular-spring: {}
  spring-mysql: {}